{"version":3,"sources":["App.js","index.js"],"names":["MessagesBoard","id","React","Component","TypingBar","message","user","$","val","length","append","jsxToString","replaceAll","window","socket","send","JSON","stringify","class","className","htmlFor","type","name","autoComplete","onClick","this","submitMessage","App","host","WebSocket","onmessage","frame","parsed","parse","data","pseudo","username","receiveMsg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAkBMA,E,4JACJ,WACE,OACE,qBAAKC,GAAG,sB,GAHcC,IAAMC,WAS5BC,E,mKAEJ,WA0BF,IAAkBC,EAASC,EAxBnBC,IAAE,iBAAiBC,MAAMC,QAAUF,IAAE,cAAcC,MAAMC,QAC3DF,IAAE,kBAAkBG,OAAOC,KAuBfN,EAvBmCE,IAAE,iBAAiBC,MAuB7CF,EAvBoDC,IAAE,cAAcC,MA2B7FH,GADAA,EAAUA,EAAQO,WAAW,IAAK,SAChBA,WAAW,IAAK,QAElCN,GADAA,EAAOA,EAAKM,WAAW,IAAK,SAChBA,WAAW,IAAK,QAE5BC,OAAOC,OAAOC,KAAKC,KAAKC,UAAU,CAAC,QAAUZ,EAAS,OAAUC,KAE9D,qBAAKY,MAAM,cAAX,SAA0Bb,OAhC1BE,IAAE,iBAAiBC,IAAI,M,oBAGzB,WACE,OACE,sBAAKP,GAAG,eAAR,UACI,sBAAKkB,UAAU,gBAAf,UACI,uBAAOC,QAAQ,YAAf,oBACA,uBAAOnB,GAAG,YAAYoB,KAAK,OAAOC,KAAK,gBAE3C,sBAAKH,UAAU,mBAAf,UACI,uBAAOC,QAAQ,eAAf,qBACA,uBAAOnB,GAAG,eAAeoB,KAAK,OAAOE,aAAa,MAAMD,KAAK,eAEjE,qBAAKH,UAAU,sBAAf,SACM,wBAAQK,QAASC,KAAKC,cAAtB,gC,GArBQxB,IAAMC,WA0CfwB,MA9Df,WAEE,OACE,sBAAK1B,GAAG,cAAR,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCKNY,OAAOe,KAAO,yBACdf,OAAOC,OAAS,IAAIe,UAAUhB,OAAOe,MACrCf,OAAOC,OAAOgB,UAAY,SAASC,GAEjC,IAAIC,EAAShB,KAAKiB,MAAMF,EAAMG,MAC1B5B,EAAO0B,EAAOG,OACd9B,EAAU2B,EAAO3B,QACrBE,IAAE,kBAAkBG,OAAOC,IAjB7B,SAAqByB,EAAU/B,GAE7B,OACE,sBAAKa,MAAM,kBAAX,UACE,sBAAMA,MAAM,aAAZ,SAA0BkB,EAAW,MACrC,sBAAMlB,MAAM,UAAZ,SAAuBb,OAYYgC,CAAW/B,EAAMD,MAG1DiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f9c91e74.chunk.js","sourcesContent":["import React from 'react';\nimport './template.css';\nimport $ from 'jquery';\nimport jsxToString from 'jsx-to-string';\n\n\n\nfunction App() {\n\n  return (\n    <div id=\"mainWrapper\">\n      <MessagesBoard />\n      <TypingBar />\n    </div>\n  );\n\n}\n\nclass MessagesBoard extends React.Component {\n  render () { \n    return (\n      <div id=\"messagesBoard\">\n      </div>\n    );\n  }\n}\n\nclass TypingBar extends React.Component {\n\n  submitMessage()\n  {\n    if ($('#messageField').val().length && $('#userField').val().length)\n      $('#messagesBoard').append(jsxToString(SendMsg($('#messageField').val(), $('#userField').val())));\n    $('#messageField').val('');\n  }\n\n  render () {\n    return (\n      <div id=\"messagingBar\">\n          <div className=\"userContainer\">\n              <label htmlFor=\"userField\">Pseudo</label>\n              <input id=\"userField\" type=\"text\" name=\"username\"/>\n          </div>\n          <div className=\"messageContainer\">\n              <label htmlFor=\"messageField\">Message</label>\n              <input id=\"messageField\" type=\"text\" autoComplete=\"off\" name=\"message\"/>\n          </div>\n          <div className=\"sendButtonContainer\">\n                <button onClick={this.submitMessage}> Envoyer </button>\n            </div>\n      </div>\n    );\n  }\n}\n\nfunction SendMsg (message, user) {\n\n  // XSS filtration basique\n  message = message.replaceAll(\"<\", \"&lt;\");\n  message = message.replaceAll(\">\", \"&gt;\");\n  user = user.replaceAll(\"<\", \"&lt;\");\n  user = user.replaceAll(\">\", \"&gt;\");\n\n  window.socket.send(JSON.stringify({\"message\":message, \"pseudo\": user}));\n  return (\n    <div class=\"sentMessage\">{message}</div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport $ from 'jquery';\nimport jsxToString from 'jsx-to-string';\n\nfunction receiveMsg (username, message) {\n\n  return (\n    <div class=\"receivedMessage\">\n      <span class=\"senderName\">{username + ':'}</span>\n      <span class=\"message\">{message}</span>\n    </div>\n  );\n}\n\nwindow.host = 'ws://127.0.0.1:8000/ws';\nwindow.socket = new WebSocket(window.host);\nwindow.socket.onmessage = function(frame){\n\n  var parsed = JSON.parse(frame.data);\n  var user = parsed.pseudo;\n  var message = parsed.message;\n  $('#messagesBoard').append(jsxToString(receiveMsg(user, message)));\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}